let createStore,combineReducers;_a46‍.w("redux",[["createStore",["createStore"],function(v){createStore=v}],["combineReducers",["combineReducers"],function(v){combineReducers=v}]]);
// const createStore = require('redux')
// const combineReducers = require('redux')


// Action Creators

const createPolicy = (name, amount) => {
    return ({
        type: 'CREATE_POLICY',
        payload: {
            name,
            amount
        }
    })
}

const deletePolicy = (name) => {
    return ({
        type: 'DELETE_POLICY',
        payload: {
            name
        }
    })
}

const claimPolicy = (name, amount) => {
    return ({
        type: 'CREATE_CLAIM',
        payload: {
            name,
            amount
        }
    })
}

// REDUCERS

const billing = (funds = 1000, action) => {
    switch(action.type) {
        case 'CREATE_POLICY':
            return funds + action.payload.amount
            break
        case 'CREATE_CLAIM':
            return funds - action.payload.amount
            break
        default:
            return funds
    }
}

const policies = (listOfPolicies = [], action) => {
    switch(action.type) {
        case 'CREATE_POLICY':
            return [...listOfPolicies, action.payload.name]
            break
        case 'DELETE_POLICY':
            return listOfPolicies.filter(client => client !== action.payload.name)
            break
        default:
            return listOfPolicies
    }
}

const claims = (listOfClaims = [], action) => {
    switch(action.type) {
        case 'CREATE_CLAIM':
            return [...listOfClaims, action.payload.name]
            break
        default:
            return listOfClaims
    }
}


const departments = combineReducers ({
    policies,
    claims,
    billing
})

const store = createStore(departments)

store.dispatch(createPolicy('Matt', 250))
store.dispatch(createPolicy('Mel', 240))
_a46‍.g.console.log(store.getState())

store.dispatch(claimPolicy('Matt', 300))
_a46‍.g.console.log(store.getState())

store.dispatch(createPolicy('Bob', 100))
_a46‍.g.console.log(store.getState())

store.dispatch(deletePolicy('Bob'))
_a46‍.g.console.log(store.getState())